<?php
namespace RedCat\Artist\Plugin;
use RedCat\Artist\ArtistPlugin;
use Seld\JsonLint\ParsingException;
use RecursiveIteratorIterator;
use RecursiveDirectoryIterator;

class AssetJsalias extends ArtistPlugin{
	use AssetTrait;
	protected $description = 'Register navigator main javascript from bower vendor directory in $js.alias config';
	protected $args = ['jsconfigfile'=>'The $js alias or config file definition to store alias key'];
	
	protected $exclude = ['js'];
	protected $bowerAliasPrefix = '';
	protected $npmAliasPrefix = 'npm.';
	protected function exec(){
		$this->loadAssetInstallerPaths();
		$mapFile = $this->input->getArgument('jsconfigfile')?:$this->cwd.'js/js.alias-asset.js';
		$start = "/* this file is autogenerated from \"artist asset:jsalias\" command, don't modify it, any change will be lost */\n";
		$start .= '$js.alias(';
		$end = ');';
		
		$bower = $this->registerAsset($this->bowerAssetDir,$this->bowerAliasPrefix);
		$npm = $this->registerAsset($this->npmAssetDir,$this->npmAliasPrefix);
		
		$alias = array_merge($npm,$bower);
		
		$jsonEncode = json_encode($alias,JSON_UNESCAPED_SLASHES|JSON_UNESCAPED_UNICODE|JSON_PRETTY_PRINT,true);
		if(!is_dir($d=dirname($mapFile))) @mkdir($d,0777,true);
		file_put_contents($mapFile,$start.$jsonEncode.$end);
		$this->output->writeln('bower-asset and npm-asset packages alias registered for $js in '.$mapFile);
	}
	function registerAsset($assetDir,$aliasPrefix=''){
		$source = $this->cwd.$assetDir;
		$alias = [];
		foreach(glob($source.'/*',GLOB_ONLYDIR) as $p){
			$packageName = basename($p);
			$packageNameAlias = $aliasPrefix.$packageName;
			if(in_array($packageName,$this->exclude)) continue;
			if(is_file($jsonFile=$p.'/bower.json')||is_file($jsonFile=$p.'/component.json')){
				$json = json_decode(file_get_contents($jsonFile),true);
				if(!isset($json['main'])) continue;
				$mainJson = $json['main'];
			}
			elseif(is_file($jsonFile=$p.'/composer.json')){
				$json = json_decode(file_get_contents($jsonFile),true);
				if(!isset($json['extra']['component']['scripts'])) continue;
				$mainJson = $json['extra']['component']['scripts'];
			}
			else{
				continue;
			}
			foreach((array)$mainJson as $main){
				if(strtolower(pathinfo($main,PATHINFO_EXTENSION))=='js'){
					$alias[$packageNameAlias] = self::cleanDotInUrl($assetDir.'/'.$packageName.'/'.substr($main,0,-3));
					break;
				}
			}
		}
		return $alias;
	}
}